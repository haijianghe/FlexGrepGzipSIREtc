以sed数据集为例（其它数据集略有不同），在VirtualBox+Ubuntu下先生成测试结果文件tXXX和语句覆盖文件tXXX.gcov，再使用我自己编写的java程序SBFLresearch生成程序谱profile,
详细说明步骤如下：
在VirtualBox+Ubuntu下，
（1）拷贝create-ver-dir.exe文件到source目录，检查sed的V?有几个bug版本，使用create-ver-dir.exe XX（bug版本数目）在文件夹traces下生成若干文件夹v1,v2,...，再手动添加文件夹vok到traces；
拷贝文件夹v1,v2,...,vok到目录outputs；traces目录将保存语句覆盖数据，目录outputs将保存关于各个测试用例的程序输出结果。
（2）拷贝genScripts.sh文件到source目录，执行
export CLASSPATH=$CLASSPATH:/home/ccsu/ObjectTools/mts/lib/antlr-2.7.6.jar:/home/ccsu/ObjectTools/mts/bin/mts.jar
#generate test scripts
echo "$(date) generate test scripts: fault-$fault"
java sir.mts.MakeTestScript -sf ../testplans.alt/v1/v0_2.universe -sn ../scripts/runall.sh -en sed.int.exe -tg bsh
数据集Flex,Grep,Gzip会不同，有的两个universe文件，有点尽管只有一个universe，但文件名不同。
运行bash genScripts.sh，在文件夹scripts下生成文件runall.sh
(3)拷贝assembSIRNewCov.exe文件到source目录，执行./assembSIRNewCov.exe sed,生成文件getcovs.origin.sh
(4)将sed/versions.alt/versions.seeded/v1（其它版本亦如此，特别注意FaultSeeds.h）下所有文件拷贝到source目录，测试gcc命令，检查是否能够通过编译；如果通过编译，修改文件buildexe.sh，类似：
        rm FaultSeeds.h
        #-Wimplicit-int
        #-Wimplicit-function-declaration
        rm sed.int.exe
        #-include stdlib.h
        #-Wpointer-to-int-cast
        gcc  -fprofile-arcs -ftest-coverage  -I . sed.c  -o sed.int.exe
(5)
